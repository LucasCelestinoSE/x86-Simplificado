HELLO WORLD TO MY LIFES INTERRUPTION 
//Add ponntos importantes sobre a interrupção de software e hardwar
//Cr = R[26]
//Novo registrador chamado Cr, seu propósito e tratar a causa da interrupção, armazenando o código de sua interrupção.
//Ipc = R[27]
//Novo registrador chamado Ipc, seu propósito é tratar a causa da interrupção, amazenando o endereço de onde a interrupção foi causada ou gerada.
// Preparação da construção e execução do ISR: Funciona por meio de pilha.
// MEM[SP] = PC + 4; (Armazenando a proxima instrução no stack pointer )
// SP = SP - 4;
// MEM[SP] = cr, SP = SP - 4;

// MEM[SP] = IPC, SP = SP - 4;

*Reti*
//Retorno de interrupção
SP = SP + 4,IPC = MEM[SP]
SP = SP + 4, Cr = MEM[SP]
Sp = Sp + 4, PC = MEM[SP]

*CBR* (Clear Bit Right)
cbr[z][x] = 0
Limpa o bit a direita do cbr
*SBR*
Adiciona bits a direita
sbr[z][x] = 1
*INT*
i = 0, simulação finalizada
i != 0 -> cr = i, ipc = PC, PC = 0x0000000C; 

*Exceções de Software na arquitetura poxim*
> Instrção Invalida
>> Não é mascarável
>> Iv = 1 Cr = R[30]i(31:26), IPC = PC, PC = 0x00000004

>> Divisão por 0
>>> É Mascarável e não fica pendente
>>> IE = 0 -> ZD = 1, CR = 0, IPC = PC , PC = 0x00000008
